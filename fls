#!/usr/local/bin/perl

$startdir = ".";
$show_dirs = 1;
$show_files = 1;
$filter = "";
$show_time = 0;
$show_size = 0;
$show_mode = 0;
$Sort      = 0;

foreach $arg (@ARGV) {
   if ($arg eq "-d") {
      $show_dirs ^= 1;
   } 
   elsif ($arg eq "-ss") {
      $Sort = "size";
   }
   elsif ($arg eq "-st") {
      $Sort = "time";
   }
   elsif ($arg eq "-f") {
      $show_files ^= 1;
   } 
   elsif ($arg eq "-u") {
      $show_user ^= 1;
   } 
   elsif ($arg eq "-t") {
      $show_time ^= 1;
   }
   elsif ($arg eq "-s") {
      $show_size ^= 1;
   }
   elsif ($arg eq "-m") {
      $show_mode ^= 1;
   }
   elsif (-d $arg) {
      push(@dirs, $arg);
   }
   elsif (-f $arg) {
      push(@found, $arg);
   }
   else { # ($arg =~ /\*|\?/) {
      $filter .= "|" if $filter;
      $filter .= lc($arg)."\$";
   }
}
if ($filter) {
   $filter =~ s/\./\\\./g;
   $filter =~ s/\*/\.\*/g;
   $filter =~ s/\?/\./g;
   $filter =~ s/\+/\.\*/g;
}
if (($#dirs < 0) && ($#found < 0)) { push(@dirs,$startdir); }
#print "filter:[".$filter."]\n";
#print "show_dirs:".$show_dirs."\n";
#print "show_files:".$show_files."\n";
@output = ();
foreach $ldir (@dirs) {
   #print "find $ldir -print\n";;
   push @found , `find $ldir -print`;
}

foreach $f (@found) {
   chomp($f);
   $f !~ s/[^[:print:]]/?/g; # Remove non-printable chars
   my $extra = "";
   my $fullfile = $dir."/".$f;
   next if $f =~ /^\.+$/;
   next unless $f =~ /($filter)/;
   if ($Sort || $show_time || $show_size || $show_mode || $show_user) {
      my ($dev,$ino,$mode,$nlink,$uid,$gid,$rdev,$size,$atime,$mtime,$ctime,$blksize,$blocks) = lstat($f);
      $extra .= $mtime.";" if $Sort eq "time";
      $extra .= $size.";" if $Sort eq "size";
      $extra .= "[".localtime($mtime)."] " if $show_time;
      $extra .= sprintf("%13s ",&addcommas($size)) if $show_size;             
      $extra .= sprintf("%5s ",mode_to_string($mode)) if $show_mode;
      $extra .= sprintf("%5s ", getpwuid($uid)) if $show_user;
   }
   if (-d $f) {
      push(@output,$extra.$f."/\n") if $show_dirs;
   } else { 
      push(@output,$extra.$f."\n") if $show_files; 
   }
}

if ($Sort) { @output = sort {$a <=> $b} @output; }

foreach my $o (@output) { 
   ($t,$o) = split(/;/,$o) if $Sort;
   print $o; 
}

sub mode_to_string() {
   my $octmode = shift;
   my $orig = $octmode;
   my @mbits = ();
   for (1..3) {
      push(@mbits, ($octmode & 01) ? 'x' : '-');
      push(@mbits, ($octmode & 02) ? 'w' : '-');
      push(@mbits, ($octmode & 04) ? 'r' : '-');
      $octmode >>= 3;
   }
   if    ($octmode & 040 ) { push(@mbits,'d'); }
   elsif ($orig & 0x2000) { push(@mbits,'l'); }
   elsif ($octmode & 0100) { push(@mbits,'-'); }
   else  { push(@mbits,sprintf("%x",$orig)); }
   return join('',reverse(@mbits));
}

sub addcommas() {
   my $input = shift;
   while ($input =~ s/(\d)(\d{3})(?!\d)/$1,$2/) {}
   return $input;
}

